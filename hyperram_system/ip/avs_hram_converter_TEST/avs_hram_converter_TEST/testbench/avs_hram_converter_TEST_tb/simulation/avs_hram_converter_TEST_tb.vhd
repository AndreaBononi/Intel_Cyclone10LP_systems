-- avs_hram_converter_TEST_tb.vhd

-- Generated using ACDS version 22.1 917

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity avs_hram_converter_TEST_tb is
end entity avs_hram_converter_TEST_tb;

architecture rtl of avs_hram_converter_TEST_tb is
	component avs_hram_converter_TEST is
		port (
			avalon_slave_address             : in    std_logic_vector(31 downto 0) := (others => 'X'); -- address
			avalon_slave_read                : in    std_logic                     := 'X';             -- read
			avalon_slave_readdata            : out   std_logic_vector(15 downto 0);                    -- readdata
			avalon_slave_write               : in    std_logic                     := 'X';             -- write
			avalon_slave_writedata           : in    std_logic_vector(15 downto 0) := (others => 'X'); -- writedata
			avalon_slave_waitrequest         : out   std_logic;                                        -- waitrequest
			avalon_slave_readdatavalid       : out   std_logic;                                        -- readdatavalid
			avalon_slave_burstcount          : in    std_logic_vector(10 downto 0) := (others => 'X'); -- burstcount
			clk_clk                          : in    std_logic                     := 'X';             -- clk
			hbus_clock_outclk                : out   std_logic;                                        -- outclk
			hyperbus_data                    : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- data
			hyperbus_chipselect_n            : out   std_logic;                                        -- chipselect_n
			hyperbus_localreset_n            : out   std_logic;                                        -- localreset_n
			hyperbus_strobe_to_memory        : in    std_logic                     := 'X';             -- strobe_to_memory
			hyperbus_shiftedstrobe_to_memory : in    std_logic                     := 'X';             -- shiftedstrobe_to_memory
			hyperbus_strobe_from_memory      : out   std_logic;                                        -- strobe_from_memory
			reset_n_reset_n                  : in    std_logic                     := 'X'              -- reset_n
		);
	end component avs_hram_converter_TEST;

	component altera_avalon_clock_source is
		generic (
			CLOCK_RATE : positive := 10;
			CLOCK_UNIT : positive := 1000000
		);
		port (
			clk : out std_logic   -- clk
		);
	end component altera_avalon_clock_source;

	component altera_avalon_reset_source is
		generic (
			ASSERT_HIGH_RESET    : integer := 1;
			INITIAL_RESET_CYCLES : integer := 0
		);
		port (
			reset : out std_logic;        -- reset_n
			clk   : in  std_logic := 'X'  -- clk
		);
	end component altera_avalon_reset_source;

	signal avs_hram_converter_test_inst_clk_bfm_clk_clk         : std_logic; -- avs_hram_converter_TEST_inst_clk_bfm:clk -> [avs_hram_converter_TEST_inst:clk_clk, avs_hram_converter_TEST_inst_reset_n_bfm:clk]
	signal avs_hram_converter_test_inst_reset_n_bfm_reset_reset : std_logic; -- avs_hram_converter_TEST_inst_reset_n_bfm:reset -> avs_hram_converter_TEST_inst:reset_n_reset_n

begin

	avs_hram_converter_test_inst : component avs_hram_converter_TEST
		port map (
			avalon_slave_address             => open,                                                 -- avalon_slave.address
			avalon_slave_read                => open,                                                 --             .read
			avalon_slave_readdata            => open,                                                 --             .readdata
			avalon_slave_write               => open,                                                 --             .write
			avalon_slave_writedata           => open,                                                 --             .writedata
			avalon_slave_waitrequest         => open,                                                 --             .waitrequest
			avalon_slave_readdatavalid       => open,                                                 --             .readdatavalid
			avalon_slave_burstcount          => open,                                                 --             .burstcount
			clk_clk                          => avs_hram_converter_test_inst_clk_bfm_clk_clk,         --          clk.clk
			hbus_clock_outclk                => open,                                                 --   hbus_clock.outclk
			hyperbus_data                    => open,                                                 --     hyperbus.data
			hyperbus_chipselect_n            => open,                                                 --             .chipselect_n
			hyperbus_localreset_n            => open,                                                 --             .localreset_n
			hyperbus_strobe_to_memory        => open,                                                 --             .strobe_to_memory
			hyperbus_shiftedstrobe_to_memory => open,                                                 --             .shiftedstrobe_to_memory
			hyperbus_strobe_from_memory      => open,                                                 --             .strobe_from_memory
			reset_n_reset_n                  => avs_hram_converter_test_inst_reset_n_bfm_reset_reset  --      reset_n.reset_n
		);

	avs_hram_converter_test_inst_clk_bfm : component altera_avalon_clock_source
		generic map (
			CLOCK_RATE => 50000000,
			CLOCK_UNIT => 1
		)
		port map (
			clk => avs_hram_converter_test_inst_clk_bfm_clk_clk  -- clk.clk
		);

	avs_hram_converter_test_inst_reset_n_bfm : component altera_avalon_reset_source
		generic map (
			ASSERT_HIGH_RESET    => 0,
			INITIAL_RESET_CYCLES => 50
		)
		port map (
			reset => avs_hram_converter_test_inst_reset_n_bfm_reset_reset, -- reset.reset_n
			clk   => avs_hram_converter_test_inst_clk_bfm_clk_clk          --   clk.clk
		);

end architecture rtl; -- of avs_hram_converter_TEST_tb
